# These are the default stages.
# You don't need to explicitly define them.
# But you could define any stages you want.
image: maven:latest

stages:
  - build
  - test
  - deploy

build:
  stage: build
  tags:
    - ugrad
  script:
    - echo "build started"
    - mvn clean install -P test
  artifacts:
    paths:
      - target

test:
  stage: test
  tags:
    - ugrad
  script:
    - echo "test started"
    - mvn verify
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml

deploy_dev:
  stage: deploy
  tags:
    - ugrad
  before_script:
    - 'command -v ssh-agent >/dev/null||(apt-get update-y && apt-get install openssh-client-y)'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY_DEV" | tr -d '\r' | ssh-add -
  script:
    - zip -r ${CI_COMMIT_SHORT_SHA}.zip target
    - scp -r -o StrictHostKeyChecking=no ${CI_COMMIT_SHORT_SHA}.zip "${DEPLOY_USER_DEV}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_SHORT_SHA}.zip"
    - dbConfigFile="application.properties"
    - echo "$DB_DRIVER" > $dbConfigFile
    - echo "$DB_URL_DEV" >> $dbConfigFile
    - echo "$DB_USERNAME_DEV" >> $dbConfigFile
    - echo "$DB_PASSWORD_DEV" >> $dbConfigFile
    - cat $dbConfigFile
    - scp -r -o StrictHostKeyChecking=no ${dbConfigFile} "${DEPLOY_USER_DEV}@${DEPLOY_HOST}:${DEPLOY_DIR}/${dbConfigFile}"
  only:
    - projectsetup

deploy_prod:
  stage: deploy
  tags:
    - ugrad
  before_script:
    - 'command -v ssh-agent >/dev/null||(apt-get update-y && apt-get install openssh-client-y)'
    - eval $(ssh-agent -s)
    - echo "$DEPLOY_SSH_KEY_PROD" | tr -d '\r' | ssh-add -
  script:
    - zip -r ${CI_COMMIT_SHORT_SHA}.zip target
    - scp -r -o StrictHostKeyChecking=no ${CI_COMMIT_SHORT_SHA}.zip "${DEPLOY_USER_PROD}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_SHORT_SHA}.zip"
    - dbConfigFile="application.properties"
    - echo "$DB_DRIVER" > $dbConfigFile
    - echo "$DB_URL_PROD" >> $dbConfigFile
    - echo "$DB_USERNAME_PROD" >> $dbConfigFile
    - echo "$DB_PASSWORD_PROD" >> $dbConfigFile
    - cat $dbConfigFile
    - scp -r -o StrictHostKeyChecking=no ${dbConfigFile} "${DEPLOY_USER_PROD}@${DEPLOY_HOST}:${DEPLOY_DIR}/${dbConfigFile}"
  only:
    - release